#!/usr/bin/env bash
set -euo pipefail

# ==== CONFIG ====
EDGE="top"
VISIBILITY="always"
TAB_WIDTH="24"
SHELL_PATH=""
CONF_DIR="${XDG_CONFIG_HOME:-$HOME/.config}/kitty"
SNIPPET="$CONF_DIR/99-tabbar-generated.conf"
KITTY_CONF="$CONF_DIR/kitty.conf"

# ==== HELP ====
usage() {
cat <<USAGE
Usage: setup_kitty_debian.sh [options]

Options:
  --edge {top|bottom}          Tab bar position (default: top)
  --visibility {always|multiple|hidden}
                               Tab bar visibility (default: always)
  --width N                    Equal tab width in columns (default: 24)
  --shell /path/to/shell       Set default shell (e.g. /usr/bin/zsh)
  -h, --help                   Show this help

Example:
  ./setup_kitty_debian.sh --shell /usr/bin/zsh
USAGE
}

# ==== ARG PARSING ====
while [[ $# -gt 0 ]]; do
  case "$1" in
    --edge) EDGE="${2:-}"; shift 2 ;;
    --visibility) VISIBILITY="${2:-}"; shift 2 ;;
    --width) TAB_WIDTH="${2:-}"; shift 2 ;;
    --shell) SHELL_PATH="${2:-}"; shift 2 ;;
    -h|--help) usage; exit 0 ;;
    *) echo "Unknown option: $1"; usage; exit 1 ;;
  esac
done

# ==== VALIDATE ====
[[ "$EDGE" =~ ^(top|bottom)$ ]] || { echo "Invalid --edge"; exit 1; }
[[ "$VISIBILITY" =~ ^(always|multiple|hidden)$ ]] || { echo "Invalid --visibility"; exit 1; }
[[ "$TAB_WIDTH" =~ ^[0-9]+$ ]] || { echo "Invalid --width"; exit 1; }

# ==== INSTALL KITTY ====
install_kitty() {
  if command -v kitty >/dev/null; then
    echo "Kitty already installed."
  else
    echo "Installing Kitty..."
    sudo apt-get update
    sudo apt-get install -y kitty
  fi
}

install_kitty

# ==== WRITE CONFIG ====
mkdir -p "$CONF_DIR"

{
  echo "# Auto-generated by setup_kitty_debian.sh"
  echo "tab_bar_edge $EDGE"
  echo "tab_bar_visibility $VISIBILITY"
  echo "tab_title_template \"{index}\""
  echo
  echo "# Solid equal-width tab style"
  echo "tab_bar_style powerline"
  echo "tab_bar_margin_width 0"
  echo "tab_bar_min_tabs_width $TAB_WIDTH"
  echo "tab_bar_max_tabs_width $TAB_WIDTH"
  if [[ -n "$SHELL_PATH" ]]; then
    echo
    echo "# Default shell"
    echo "shell $SHELL_PATH"
  fi
} > "$SNIPPET"

# ==== INCLUDE IN MAIN CONF ====
[[ -f "$KITTY_CONF" ]] || : > "$KITTY_CONF"
if ! grep -Fq "include $(basename "$SNIPPET")" "$KITTY_CONF"; then
  echo -e "\n# Include tabbar config\ninclude $(basename "$SNIPPET")" >> "$KITTY_CONF"
fi

echo "âœ… Tab config written to: $SNIPPET"
echo "âœ… Updated: $KITTY_CONF"
echo "ðŸ”„ Reload Kitty (Ctrl+Shift+F5) or restart to apply."

